name: Test

on:
  pull_request:
    branches: ['preview', 'main']
  push:
    branches: ['preview', 'main']

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      PEPPER: ${{ secrets.PEPPER }}
    steps:
      - uses: actions/checkout@v3
      - uses: planetscale/setup-pscale-action@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Create Dev DB Branch and credential
        run: |
          pnpm pscale:branch:create
          pnpm pscale:cred:create "ga-prepare-${{ github.run_number }}"

      - run: pnpm install
  unit-tests:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      PEPPER: ${{ secrets.PEPPER }}
    steps:
      - uses: actions/checkout@v3
      - uses: planetscale/setup-pscale-action@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'pnpm'  
      - name: Install dependencies
        run: pnpm install
      
      - name: Generate New Credentials
        run: |
          pnpm pscale:cred:delete-all-ci "ga-"
          pnpm pscale:cred:create "ga-unit-tests-${{ github.run_number }}"
      
      - name: Generate Prisma Client & Build
        run: |
          pnpm prisma generate
          pnpm build

      - name: Run unit tests
        run: pnpm test:unit

  e2e-tests:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
      PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      PEPPER: ${{ secrets.PEPPER }}
    steps:
      - uses: actions/checkout@v3
      - uses: planetscale/setup-pscale-action@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright
        run: |
          pnpm exec playwright install --with-deps
          pnpm exec playwright install msedge

      - name: Generate New Credentials
        run: pnpm pscale:cred:create "ga-e2e-tests-${{ github.run_number }}"
      
      - name: Generate Prisma Client & Build
        run: |
          pnpm prisma generate
          pnpm build
      
      - name: Run end-to-end tests
        run: pnpm test

  cleanup:
    needs: [unit-tests, e2e-tests]
    if: always()
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: planetscale/setup-pscale-action@v1
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Delete Credentials
        run: pnpm pscale:cred:delete-all-ci "ga-"
