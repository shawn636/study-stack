name: Test

on:
    pull_request:
        branches: ['main']
    push:
        branches: ['main']

jobs:
    prepare:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        env:
            PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
            PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
            PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            PEPPER: ${{ secrets.PEPPER }}
            GH_TOKEN: ${{ github.token }}
        steps:
            - uses: actions/checkout@v3
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'pnpm'
            - run: pnpm install
            - run: pnpm pscale:branch:create
            - run: pnpm pscale:cred:create "ga-prepare-${{ github.run_number }}"

    unit-tests:
        needs: prepare
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        env:
            PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
            PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
            PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            PEPPER: ${{ secrets.PEPPER }}
            GH_TOKEN: ${{ github.token }}
        steps:
            - uses: actions/checkout@v3
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm pscale:cred:create "ga-unit-tests-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm test:unit

    e2e-tests:
        needs: prepare
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        env:
            PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
            PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
            PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            PEPPER: ${{ secrets.PEPPER }}
            GH_TOKEN: ${{ github.token }}
        steps:
            - uses: actions/checkout@v3
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm exec playwright install --with-deps
            - run: pnpm exec playwright install msedge
            - run: pnpm pscale:cred:create "ga-e2e-tests-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm test

    deploy-preview:
        needs: [unit-tests, e2e-tests]
        runs-on: ubuntu-latest
        if: ${{ github.event_name == 'pull_request' }}
        permissions:
            contents: read
            pull-requests: write
        env:
            PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
            PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
            PUBLIC_AMPLITUDE_API_KEY: ${{ secrets.PUBLIC_AMPLITUDE_API_KEY }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            PEPPER: ${{ secrets.PEPPER }}
            GH_TOKEN: ${{ github.token }}
        steps:
            - uses: actions/checkout@v3
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm pscale:cred:create "ga-deploy-preview-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm pscale:dr:create
            - run: pnpm vercel:deploy:preview

    cleanup:
        needs: [deploy-preview]
        if: always()
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
        env:
            PLANETSCALE_SERVICE_TOKEN_ID: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_ID }}
            PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
        steps:
            - uses: actions/checkout@v3
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - uses: actions/setup-node@v3
              with:
                  node-version: '20.x'
                  cache: 'pnpm'

            - run: pnpm pscale:cred:delete-all-ci "ga-"
