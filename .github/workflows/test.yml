name: Test

on:
    pull_request:
        branches: ['main']
    push:
        branches: ['main']

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

env:
    USE_OPCLI: true
    DEBUG_MODE: ${{ vars.DEBUG_MODE}}

jobs:
    prepare:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' || github.event_name == 'workflow_dispatch' }}
        permissions:
            contents: read
            pull-requests: write

        steps:
            - name: Load secrets
              uses: 1password/load-secrets-action@v2
              env:
                  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
                  PEPPER: op://StudyStack/StudyStack Secrets/Auth/PEPPER
                  MAILERSEND_API_KEY: op://StudyStack/StudyStack Secrets/Mailersend/MAILERSEND_API_KEY
                  VERCEL_TOKEN: op://StudyStack/StudyStack Secrets/Vercel/VERCEL_TOKEN
                  PLANETSCALE_SERVICE_TOKEN_ID: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN_ID
                  PLANETSCALE_SERVICE_TOKEN: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN
                  PSCALE_DB_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_DB_NAME
                  PSCALE_ORG_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_ORG_NAME
                  GH_TOKEN: op://StudyStack/StudyStack Secrets/Github/GH_TOKEN
            - uses: actions/checkout@v4
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'pnpm'
            - run: pnpm install
            - run: pnpm pscale:branch:create
            - run: pnpm pscale:cred:create "ga-prepare-${{ github.run_number }}"

    unit-tests:
        needs: prepare
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' || github.event_name == 'workflow_dispatch' }}
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Load secrets
              uses: 1password/load-secrets-action@v2
              env:
                  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
                  PEPPER: op://StudyStack/StudyStack Secrets/Auth/PEPPER
                  MAILERSEND_API_KEY: op://StudyStack/StudyStack Secrets/Mailersend/MAILERSEND_API_KEY
                  VERCEL_TOKEN: op://StudyStack/StudyStack Secrets/Vercel/VERCEL_TOKEN
                  PLANETSCALE_SERVICE_TOKEN_ID: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN_ID
                  PLANETSCALE_SERVICE_TOKEN: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN
                  PSCALE_DB_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_DB_NAME
                  PSCALE_ORG_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_ORG_NAME
                  GH_TOKEN: op://StudyStack/StudyStack Secrets/Github/GH_TOKEN
            - uses: actions/checkout@v4
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm pscale:cred:create "ga-unit-tests-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm prisma db push --accept-data-loss
            - run: pnpm prisma generate
            - run: pnpm test:unit

    e2e-tests:
        needs: prepare
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' || github.event_name == 'workflow_dispatch' }}
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Load secrets
              uses: 1password/load-secrets-action@v2
              env:
                  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
                  PEPPER: op://StudyStack/StudyStack Secrets/Auth/PEPPER
                  MAILERSEND_API_KEY: op://StudyStack/StudyStack Secrets/Mailersend/MAILERSEND_API_KEY
                  VERCEL_TOKEN: op://StudyStack/StudyStack Secrets/Vercel/VERCEL_TOKEN
                  PLANETSCALE_SERVICE_TOKEN_ID: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN_ID
                  PLANETSCALE_SERVICE_TOKEN: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN
                  PSCALE_DB_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_DB_NAME
                  PSCALE_ORG_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_ORG_NAME
                  GH_TOKEN: op://StudyStack/StudyStack Secrets/Github/GH_TOKEN
            - uses: actions/checkout@v4
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm exec playwright install --with-deps
            - run: pnpm exec playwright install msedge
            - run: pnpm pscale:cred:create "ga-e2e-tests-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm prisma db push --accept-data-loss
            - run: pnpm prisma generate
            - run: pnpm test

    deploy-preview:
        needs: [unit-tests, e2e-tests]
        runs-on: ubuntu-latest
        if: ${{ (github.actor != 'dependabot[bot]' || github.event_name == 'workflow_dispatch') && github.ref != 'refs/heads/main' }}
        permissions:
            contents: read
            pull-requests: write
        steps:
            - name: Load secrets
              uses: 1password/load-secrets-action@v2
              env:
                  OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
                  PEPPER: op://StudyStack/StudyStack Secrets/Auth/PEPPER
                  MAILERSEND_API_KEY: op://StudyStack/StudyStack Secrets/Mailersend/MAILERSEND_API_KEY
                  VERCEL_TOKEN: op://StudyStack/StudyStack Secrets/Vercel/VERCEL_TOKEN
                  PLANETSCALE_SERVICE_TOKEN_ID: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN_ID
                  PLANETSCALE_SERVICE_TOKEN: op://StudyStack/StudyStack Secrets/PlanetScale/PLANETSCALE_SERVICE_TOKEN
                  PSCALE_DB_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_DB_NAME
                  PSCALE_ORG_NAME: op://StudyStack/StudyStack Secrets/PlanetScale/PSCALE_ORG_NAME
                  GH_TOKEN: op://StudyStack/StudyStack Secrets/Github/GH_TOKEN
            - uses: actions/checkout@v4
            - uses: planetscale/setup-pscale-action@v1
            - uses: pnpm/action-setup@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '22.x'
                  cache: 'pnpm'

            - run: pnpm install
            - run: pnpm pscale:cred:create "ga-deploy-preview-${{ github.run_number }}"
            - run: pnpm vercel:settings:pull
            - run: pnpm exec vercel build --prod
            - run: pnpm pscale:dr:create
            - run: pnpm vercel:deploy:preview
